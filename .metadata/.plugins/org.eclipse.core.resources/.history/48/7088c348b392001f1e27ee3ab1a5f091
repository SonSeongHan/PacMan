import javax.swing.*;
import java.awt.*;
import java.awt.image.*;
import javax.imageio.ImageIO;
import java.io.File;
import java.io.IOException;

class Map {
    private int[][] layout;

    public Map() {
        // 0: 빈 공간, 1: 벽, 2: 먹이
        layout = new int[][] {
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 0, 2, 0, 2, 0, 0, 0, 2, 1},
            {1, 0, 1, 1, 1, 1, 0, 1, 2, 1},
            {1, 0, 2, 0, 0, 2, 0, 0, 0, 1},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
        };
    }

    public int[][] getLayout() {
        return layout;
    }
}

public class PacmanGame extends JPanel implements Runnable {
    private BufferedImage pacmanImage, ghostImage, seedImage;
    private Thread gameThread;
    private Map map;

    public PacmanGame() {
        loadImages();
        map = new Map(); // 맵 초기화
        setPreferredSize(new Dimension(800, 600));
        setBackground(Color.BLACK);
        gameThread = new Thread(this);
        gameThread.start();
    }

    private void loadImages() {
        try {
            pacmanImage = ImageIO.read(new File("res/appearance/pacman.png"));
            ghostImage = ImageIO.read(new File("res/appearance/ghost.png"));
            seedImage = ImageIO.read(new File("res/appearance/seed.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        drawMap(g); // 맵 그리기
        g.drawImage(pacmanImage, 100, 100, null); // 팩맨 위치
        g.drawImage(ghostImage, 200, 100, null); // 유령 위치
    }

    private void drawMap(Graphics g) {
        int[][] layout = map.getLayout();
        for (int y = 0; y < layout.length; y++) {
            for (int x = 0; x < layout[y].length; x++) {
                if (layout[y][x] == 1) {
                    g.setColor(Color.BLUE); // 벽 색상
                    g.fillRect(x * 40, y * 40, 40, 40); // 벽 그리기
                } else if (layout[y][x] == 2) {
                    g.drawImage(seedImage, x * 40, y * 40, null); // 먹이 그리기
                }
            }
        }
    }

    @Override
    public void run() {
        while (true) {
            // 게임 상태 업데이트
            repaint(); // 화면 다시 그리기
            try {
                Thread.sleep(100); // 10 FPS
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("Pacman Game");
        PacmanGame game = new PacmanGame();
        frame.add(game);
        frame.pack();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }
}
