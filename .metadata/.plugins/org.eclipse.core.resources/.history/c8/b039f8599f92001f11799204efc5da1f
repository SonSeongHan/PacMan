package pacman;

public class Map {
    private char[][] board;
    private int pacmanX, pacmanY;
    private int ghostX, ghostY;
    private int itemX, itemY;
    private int starX, starY;

    public Map() {
        board = new char[15][15]; // 15x15 맵
        initializeBoard();
        pacmanX = 1;
        pacmanY = 1;
        ghostX = 13;
        ghostY = 13;
        itemX = 5; // 동전 위치
        itemY = 5; // 동전 위치
        starX = 7;
        starY = 7;
    }

    private void initializeBoard() {
        // 모든 위치에 동전 배치
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                board[i][j] = 'o'; // 동전
            }
        }

        // 벽 추가 (미로 형태)
        for (int i = 0; i < board.length; i++) {
            board[i][0] = '#'; // 좌측 벽
            board[i][board.length - 1] = '#'; // 우측 벽
        }
        for (int j = 0; j < board[0].length; j++) {
            board[0][j] = '#'; // 상단 벽
            board[board.length - 1][j] = '#'; // 하단 벽
        }

        // 미로 형태의 추가 벽
        board[1][3] = '#';
        board[1][4] = '#';
        board[2][2] = '#';
        board[2][3] = '#';
        board[3][5] = '#';
        board[3][6] = '#';
        board[4][5] = '#';
        board[4][7] = '#';
        board[5][3] = '#';
        board[6][1] = '#';
        board[6][2] = '#';
        board[7][1] = '#';
        board[7][3] = '#';
        board[8][8] = '#';
        board[8][9] = '#';
        board[9][5] = '#';
        board[9][6] = '#';
        board[10][3] = '#';
        board[10][8] = '#';
        board[11][1] = '#';
        board[11][4] = '#';
        board[12][5] = '#';
        board[12][10] = '#';
        board[13][3] = '#';
        board[14][7] = '#';
    }

    public void display() {
        board[pacmanY][pacmanX] = 'P'; // 팩맨 위치
        board[ghostY][ghostX] = 'G'; // 유령 위치
        board[starY][starX] = '*'; // 별 위치

        for (char[] row : board) {
            System.out.print(new String(row) + "\n");
        }

        // 원래 위치로 되돌리기
        board[pacmanY][pacmanX] = 'o';
        board[ghostY][ghostX] = ' ';
        board[starY][starX] = ' ';
    }

    public void movePacman(int x, int y) {
        if (board[pacmanY + y][pacmanX + x] != '#') {
            pacmanX += x;
            pacmanY += y;
        }
    }

    public void moveGhost(int x, int y) {
        if (board[ghostY + y][ghostX + x] != '#') {
            ghostX += x;
            ghostY += y;
        }
    }

    public boolean isGameOver(Pacman pacman) {
        return pacmanX == ghostX && pacmanY == ghostY; // 충돌 시 게임 종료
    }

    public int[] getPacmanPosition() {
        return new int[]{pacmanX, pacmanY};
    }

    public int[] getGhostPosition() {
        return new int[]{ghostX, ghostY};
    }

    public int[] getItemPosition() {
        return new int[]{itemX, itemY};
    }

    public int[] getStarPosition() {
        return new int[]{starX, starY};
    }

    public void moveItem() {
        itemX = (int) (Math.random() * (board.length - 2)) + 1;
        itemY = (int) (Math.random() * (board[0].length - 2)) + 1;
    }

    public void moveStar() {
        starX = (int) (Math.random() * (board.length - 2)) + 1;
        starY = (int) (Math.random() * (board[0].length - 2)) + 1;
    }
}
